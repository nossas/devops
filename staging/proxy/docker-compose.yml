services:
  caddy:
    image: nossas/caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"
    volumes:
      - caddy_etc:/etc/caddy
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - CADDY_ADMIN=0.0.0.0:2019
      - CADDY_EMAIL=${CADDY_EMAIL:-seu-email@example.com}  # Para receber notificações do Let's Encrypt
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-"SUA_ACCESS_KEY"}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-"SUA_SECRET_KEY"}
      - AWS_REGION="us-east-1"

  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"
  
  router-api:
    image: nossas/bonde-router:feature-caddy-api
    command: uvicorn caddy_api.api:app --reload --host 0.0.0.0
    ports:
      - "8000:8000"
    volumes:
      - caddy_etc:/app/data/caddy
    depends_on:
      - caddy
      - redis
    environment:
      - DEBUG=True
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CADDY_API_URL=http://caddy:2019
  
  router-celery:
    image: nossas/bonde-router:feature-caddy-api
    command: celery -A caddy_api.manager.celery_app.app worker --loglevel=info
    volumes:
      - caddy_etc:/app/data/caddy
    depends_on:
      - caddy
      - redis
    environment:
      - DEBUG=True
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CADDY_API_URL=http://caddy:2019

# Todos os serviços devem pertencer a mesma rede para serem descobertos pelo Traefik
networks:
  default:
    # Padronizar o nome da rede com o nome do domínio
    name: web

volumes:
  caddy_etc:
  caddy_data:
  caddy_config: