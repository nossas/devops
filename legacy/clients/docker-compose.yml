services:
  accounts:
    image: ${DOCKER_IMAGE:-nossas/bonde-clients:clients-v1.0.0}
    command: pnpm --filter accounts-client start
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    pull_policy: always
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-wget -qO- localhost:3000}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    labels:
      - traefik.enable=true
      - traefik.http.services.accounts.loadbalancer.server.port=3000
      - traefik.http.routers.accounts.tls=true
      - traefik.http.routers.accounts.tls.certresolver=myresolver
      - traefik.http.routers.accounts.rule=Host(`accounts.${DEFAULT_DOMAIN_RULE}`)

  app:
    image: ${DOCKER_IMAGE:-nossas/bonde-clients:clients-v1.0.0}
    command: pnpm --filter admin-client start
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    pull_policy: always
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-wget -qO- localhost:5000}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    labels:
      - traefik.enable=true
      - traefik.http.services.app.loadbalancer.server.port=5000
      - traefik.http.routers.app.tls=true
      - traefik.http.routers.app.tls.certresolver=myresolver
      - traefik.http.routers.app.rule=Host(`app.${DEFAULT_DOMAIN_RULE}`)

  admin-canary:
    image: ${DOCKER_IMAGE:-nossas/bonde-clients:clients-v1.0.0}
    command: pnpm --filter canary-client start
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    pull_policy: always
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-wget -qO- localhost:3000}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    labels:
      - traefik.enable=true
      - traefik.http.services.admin-canary.loadbalancer.server.port=3000
      - traefik.http.routers.admin-canary.tls=true
      - traefik.http.routers.admin-canary.tls.certresolver=myresolver
      - traefik.http.routers.admin-canary.rule=Host(`admin-canary.${DEFAULT_DOMAIN_RULE}`)

  redes:
    image: ${DOCKER_REDES_IMAGE:-nossas/bonde-clients:v7.7.2}
    command: pnpm --filter redes-client start
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    pull_policy: always
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-wget -qO- localhost:3000}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    labels:
      - traefik.enable=true
      - traefik.http.services.redes.loadbalancer.server.port=3000
      - traefik.http.routers.redes.tls=true
      - traefik.http.routers.redes.tls.certresolver=myresolver
      - traefik.http.routers.redes.rule=Host(`redes.${DEFAULT_DOMAIN_RULE}`)

# Todos os serviços devem pertencer a mesma rede para serem descobertos pelo Traefik
networks:
  default:
    # Padronizar o nome da rede com o nome do domínio
    name: web